# See https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  FORCE_COLOR: 1 # colored output where possible

jobs:
  pytest:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13, macos-latest, windows-latest]
        python-version: ["3.7", "3.13"]
        ext: [cython, no-cython] # with/without Cython extension
        exclude:
          - os: macos-latest
            python-version: "3.7" # not available
          - os: macos-13
            python-version: "3.13" # to save resources
          # skip no-cython on slower systems
          - os: macos-13
            ext: no-cython
          - os: macos-latest
            ext: no-cython
          - os: windows-latest
            ext: no-cython

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: "pip"
        cache-dependency-path: setup.py
    - name: Update setup
      run: python -m pip install --upgrade pip setuptools wheel
    - name: Install Cython
      if: matrix.ext != 'no-cython'
      # numpy and scipy must be preinstalled for building Cython extension
      run: python -m pip install numpy scipy cython
    - name: Install pytest
      run: python -m pip install pytest pytest-cov
    - name: Install PyAbel
      run: python -m pip install . -v
    - name: Information
      # (ugly but portable and with clean output)
      run: >
        python3 -c "import platform, sys, os, numpy, scipy;
        print('Platorm:', platform.platform());
        print('Python:', sys.version);
        print('NumPy:', numpy.version.full_version);
        print('SciPy:', scipy.version.full_version, flush=True);
        os.system('cython -V 2>cython.err') and print('Cython not found')"
    - name: Run tests
      # "cd .." for coverage of installed abel instead of ./abel subdir
      run: |
        cd ..
        pytest -v --cov=abel --pyargs abel
