name: Test wheels

on: workflow_dispatch

jobs:
  wheels:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-24.04]

    steps:
    - uses: actions/checkout@v4
      #with:
      #  sparse-checkout: .github/workflows/testabi3wheel/action.yml
      #  sparse-checkout-cone-mode: false
    #- run: echo Test > test.txt
    #- run: ls -RAl

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11" # for cibuildwheel itself
    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel==3.2.0
    - name: Build and test wheel with Python 3.11
      env:
        # don't show download progress bar
        PIP_PROGRESS_BAR: off
        # Linux also tries to build i686 (for which NumPy has no binary packages)
        CIBW_ARCHS: "native"
        # "manylinux" for Linux should be enough;
        # disable free-threading builds (Cython extension uses GIL)
        CIBW_SKIP: "*musllinux* cp3??t-*"
        # build for minimal Python versions with sufficient ABI3 support
        CIBW_PROJECT_REQUIRES_PYTHON: "==3.11.*"
        PYABEL_USE_ABI3: "yes"
        CIBW_ENVIRONMENT_PASS_LINUX: "PIP_PROGRESS_BAR PYABEL_USE_ABI3"
        # testing requires abi3audit for built wheel and pytest for package
        CIBW_TEST_REQUIRES: "abi3audit pytest"
        # calling pytest directly uses wrong python;
        # results can be copied to output (with meaningful name) only manually
        CIBW_TEST_COMMAND: >
          python -m abi3audit --summary {wheel} &&
          python -m pytest --pyargs abel --log-level=WARN &&
          python {package}/.github/workflows/save-test.py {package} {wheel}@3.11
      run: python -m cibuildwheel --output-dir wheels
    - name: Results
      run: ls -RAl
    - name: Test wheel with Python 3.12
      uses: ./.github/workflows/testabi3wheel
      with:
        py-ver: "3.12"
    - name: Test wheel with Python 3.13
      uses: ./.github/workflows/testabi3wheel
      with:
        py-ver: "3.13"
    - name: Results
      run: ls -RAl
