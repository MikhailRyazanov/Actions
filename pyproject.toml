[project]
name = "Actions"
description = "For testing GitHub actions"
authors = [
  {name = "Mikhail Ryazanov"},
]
license = {text = "The Unlicense"}
dependencies = ["numpy >= 1.16",       # last for Python 2
                "setuptools >= 44.0",  # last for Python 2
                "scipy >= 1.2",        # oldest tested
                "six >= 1.10.0"]
# (should be "==2.7 or >=3.7", but version specifiers have no "or")
requires-python = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*"
classifiers = [
  # How mature is this project? Common values are
  #  3 - Alpha
  #  4 - Beta
  #  5 - Production/Stable
  "Development Status :: 3 - Alpha",

  # Pick your license as you wish (should match "license" above)
  "License :: OSI Approved :: Unlicense",

  # Specify the Python versions you support here. In particular, ensure
  # that you indicate whether you support Python 2, Python 3 or both.
  "Programming Language :: Python :: 2",
  "Programming Language :: Python :: 2.7",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
# fields updated automatically:
dynamic = ["version", # __version__ from abel/abel.py, see below
           "readme"]  # actually "long description", generated in setup.py

[project.urls]
Repository = "https://github.com/MikhailRyazanov/Actions"
Homepage = "https://example.com"

[tool.setuptools.dynamic]
version = {attr = "abel._version.__version__"}

[tool.setuptools.packages.find]
include = ["abel*"]

[build-system]
# Building Cython extension *optionally* cannot be achived by any standard
# means (see https://github.com/pypa/pip/issues/6144), so building without them
# by default. To build them, preinstall the dependencies and disable build
# isolation ("pip install --no-build-isolation" or set PIP_NO_BUILD_ISOLATION).
requires = ["setuptools"]

[tool.cibuildwheel]
build-verbosity = 1

# colored output where possible
environment.FORCE_COLOR = 1

# don't try to compile NumPy and SciPy from source
environment.PIP_ONLY_BINARY = ":all:"

# preinstall packages required to build Cython extension
before-build = "python -m pip install setuptools numpy cython"

# disable PEP 517 build isolation, instead use already installed packages
# (weirdly, must be set to "0", see https://github.com/pypa/pip/issues/5735)
environment.PIP_NO_BUILD_ISOLATION = 0

# Linux also tries to build i686 (but there are no binary packages for it)
archs = "native"
# "manylinux" should be enough
skip = "*musllinux*"

test-requires = "pytest"
# calling pytest directly uses wrong python;
# results can be copied to output (with meaningful name) only manually
test-command = """
  python -m pytest --pyargs abel --log-level=WARN && \
  python {package}/.github/workflows/save-test.py {package} {wheel}
"""
