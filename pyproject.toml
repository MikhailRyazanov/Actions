[project]
name = "testPyAbel"
description = "For testing GitHub actions"
authors = [
  {name = "Mikhail Ryazanov"},
]
requires-python = ">=3.8"
dependencies = [  # last versions available for Python 3.8 and tested
  "numpy>=1.24",
  "scipy>=1.10",
]
classifiers = [
  # How mature is this project? Common values are
  #  3 - Alpha
  #  4 - Beta
  #  5 - Production/Stable
  "Development Status :: 3 - Alpha",

  # Specify the Python versions you support here.
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
readme = "README.md"
# fields updated automatically in setup.py:
dynamic = [
  "version",  # __version__ from abel/_version.py
  #"readme",   # actually long_description created from README.rst
  "license",  # = "The Unlicense", but setuptools<77 can't understand this here
]

[project.urls]
homepage = "https://github.com/MikhailRyazanov/Actions"

[build-system]
# Building Cython extensions *optionally* cannot be achieved by any standard
# means (see https://github.com/pypa/pip/issues/6144), thus a pure Python
# package is built by default.
# To build with Cython: preinstall setuptools, numpy, cython, and disable build
# isolation ("pip install . --no-build-isolation" or set the environment
# variable PIP_NO_BUILD_ISOLATION=0 before "pip install .").
requires = [  # last version available for Python 3.8 and tested
  "setuptools>=75.0",
]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["abel*"]

[tool.cibuildwheel]
build-verbosity = 1
# colored output where possible
environment.FORCE_COLOR = 1
# don't try to compile NumPy from source
environment.PIP_ONLY_BINARY = ":all:"
# preinstall packages required to build Cython extensions
before-build = "python -m pip install setuptools numpy cython"
# disable PEP 517 build isolation, instead use already installed packages
build-frontend = { name = "build", args = ["--no-isolation"] }
# (other options are controlled externally)
